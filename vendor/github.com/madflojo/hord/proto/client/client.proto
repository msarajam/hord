syntax = "proto3";

package hord.client;

// Generic Status for meaningful replies
message Status {
  // Status Codes: 0 is OK anything else is an error
  int32 code = 1;
  // Long Description of status
  string description = 2;
}

// Fetch data using key to lookup values
message GetRequest {
  // Lookup Key
  string key = 1;
}

// Fetched data
message GetResponse {
  // Lookup Key
  string key = 1;
  // Data in byte array format
  bytes data = 2;
  // Epoch Nano integer representing the time this key was last updated
  int64 last_updated = 3;
  // Request status message including code and description
  Status status = 4;
}

// Create/Update data storing under key
message SetRequest {
  // Lookup Key
  string key = 1;
  // Data in byte array format
  bytes data = 2;
}

// Status of data storage request
message SetResponse {
  // Lookup Key
  string key = 1;
  // Request status message including code and description
  Status status = 2;
}

// Delete data under key
message DeleteRequest {
  // Lookup Key
  string key = 1;
}

// Status of deletion request
message DeleteResponse {
  // Lookup Key
  string key = 1;
  // Request status message including code and description
  Status status = 2;
}

service Hord {
  // Get() will retrieve data from the Hord managed backend Database
  rpc Get(GetRequest) returns (GetResponse) {}

  // Set() will write data to the Hord managed backend Database
  rpc Set(SetRequest) returns (SetResponse) {}

  // Delete() will delete the key from the Hord managed backend Database
  rpc Delete(DeleteRequest) returns (DeleteResponse) {}
}
